version: '3'

services:
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    networks:
      - app
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    networks:
      - app
    env_file:
      - .env
    environment:
      - API_V1_STR=${API_V1_STR}
      - PROJECT_NAME=${PROJECT_NAME}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - ASSETS_DIR=${ASSETS_DIR?Variable not set}
    volumes:
      - ./assets:/assets
    depends_on:
      - db

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    networks:
      - app
    depends_on:
      - backend
      - frontend
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: postgres:12
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    networks:
        - app

networks:
  app:
    name: app
    external: true

